#!/usr/bin/env python
from ctypes import *
import sys
import numpy as np
import cv2
from pylepton import Lepton
import Queue
import platform

def capture(flip_v = False, device = "/dev/spidev0.0"):
  with Lepton(device) as l:
    raw,b= l.capture()
    
    a=raw.min();
    b=raw.max()
  if flip_v:
    raw=cv2.flip(raw,0,raw)
    
  cv2.normalize(raw, raw, 0, 65535, cv2.NORM_MINMAX)
  np.right_shift(raw, 8, raw)
  return np.uint8(raw),b,a



def display_temperature(img, val_k, loc, color):
  val = ktof(val_k)
  cv2.putText(img,"{0:.1f} degF".format(val), loc, cv2.FONT_HERSHEY_SIMPLEX, 0.75, color, 2)
  x, y = loc
  cv2.line(img, (x - 2, y), (x + 2, y), color, 1)
  cv2.line(img, (x, y - 2), (x, y + 2), color, 1)

def ktof(val):
  return (1.8 * ktoc(val) + 32.0)

def ktoc(val):
  return (val - 27315) / 100.0

hello = np.zeros((60,80),dtype=str)

data,maxval,minval = capture()

data = cv2.resize(data[:,:], (640, 480))

minVal, maxVal, minLoc, maxLoc = cv2.minMaxLoc(data)
print minVal
print minval
print maxVal
print maxval
display_temperature(data, minval, minLoc, (255, 0, 0))
display_temperature(data, maxval, maxLoc, (0, 0, 255))
cv2.imwrite('Radiometry2.jpeg', data)


